 long.time.ago say-3SG.GEN
  EXIST night LNK that
  TU-night  EXIST one child
  NEG OBL friend
  NEG OBL younger.siblings
  NEG OBL elder.sibling DM
  TU-night  NEG FS sleep
  EXIST NOM friend  accompany OBL dog
  EXIST NOM  <PFV>raise-3SG.GEN OBL frog also
  EXIST=PFV AF.play
  RED-happy CLF.HUM-three
  DM this DM dog-3SG.GEN
  DM this frog-3SG.GEN
  RED-sing maybe  frog LNK that DM
  AF-RED-laugh child LNK that
  <AF>look LOC frog LNK that  dog that EXIST
  also want catch that
  AF-RED-laugh=PFV AF-all
  3PL.NOM TU-night
  finally PART  sleepy=PFV maybe  child LNK that DM
  AF.sleep=PFV  DM
  dog EXIST DM AF.sleep=PFV also
  as.to frog LNK that DM
   AF.sleep=PFV also  child LNK this think-3SG.GEN DM
  go=PFV AF-flee  EXIST frog LNK that  from.somewhere=PFV DM
  INT  see-LF-3SG.GEN=PFV GEN dog that probably
  RED-awake=PFV  owner-3SG.GEN ?? child LNK that DM
  look-LF-3SG.GEN LOC-bottle-LOC DM
  NEG=PFV NOM  frog LNK that DM
  EXIST=PFV AF-RED-look.for  even dog that OBL
  chair-3PL.GEN chair-3PL.GEN  <RED>fall.backwards=PFV PART  do.something-LF-3SG.GEN PART
  rummage-LF-3SG.GEN=PFV PART
  thing-3PL.GEN AF-all  RED-clothes-3PL.GEN  NEG
  finally PART
  go=PFV LOC  this LOC
  ?? RED-<AF>call LOC  that  LOC frog LNK that
  even RED-dog LNK that  AF-<RED>bark DM
  finally PART
  find-LF-3SG.GEN=PFV NOM  frog LNK that
  DM AF-RED-happy=PFV NOM  dog INT  NOM person and dog LNK that  REC-RED-hug
  see-LF-3PL.GEN DM  EXIST=PFV LOC  woods PART  something this
  do.something AF.go LOC  this LOC mountain
  <AF>see OBL  something LOC  frog LNK that DM
  see-LF-3PL.GEN DM
  EXIST LOC-  something-LOC INT  EXIST NOM  bee
  FIL this  go-LF-3SG.GEN=PFV GEN dog that  AF-<RED><RED>bark DM
  DM RED-shake-LF-3SG.GEN NOM  tree LNK that
  finally PART
  chase-LF-3SG.GEN
  <AF>fall=PFV NOM  this bee LNK that home-3PL.GEN DM
  RED-chase-LF-3PL.GEN=PFV NOM dog that
  DM  however child LNK this DM  see-LF-3SG.GEN NOM  wood DM
  EXIST NOM  one LNK this
  FIL  hole GEN  tree LNK that
  FS  FS AF-rotten probably 
  go-LF-3SG.GEN AF-climb GEN  child LNK that NOM  wood LNK that DM
  it.turns.out EXIST NOM  bird
  TU owl
  owl say-1IPL.GEN NOM  FIL NOM  FIL this  bird that.way
  EXIST=PFV  do.something-LF-3SG.GEN want-LF-3SG.GEN  bite DM
  <AF>fall=PFV child LNK that DM
  as.to  something dog LNK that DM
  do.something-LF-3PL.GEN=PFV GEN  GEN bee <AF><RED>chase DM
  AF-all=PFV FS  AF-RED-run ??-this DM
  finally child LNK this DM
  EXIST NOM stone  climb=FUT=1IPL.NOM there think-3SG.GEN PART
  chase-LF-3SG.GEN GEN owl LNK that DM
  arrive LOC-  big-LOC stone DM
  EXIST NOM deer
  wood perhaps  think-3SG.GEN ?? horn-3SG.GEN DM
  grab-LF-3SG.GEN  GEN child LNK that DM
  AF-frightened=PFV probably NOM  something NOM deer LNK that
  go=PFV
   bring-LF-3SG.GEN=PFV NOM  child LNK that  AF-do.something INT FS  AF-run DM
  finally PART
  arrive here LOC-  slope-LOC
  <AF>fall=PFV NOM child LNK that
  throw-LF-3SG.GEN GEN  GEN deer LNK that
  how=FUT=2PL.NOM AF.come arrive LOC-  here LOC-tribe-LOC-1SG.GEN  say-3SG.GEN probably GEN  deer LNK that DM
  DM throw LOC-river-LOC DM
  <AF>fall=PFV child LNK that  and  this dog maybe
  that friend-3SG.GEN TU  frog LNK that PART  do-LF-3SG.GEN  <AF>fall=PFV LOC-  RED-slope-LOC
  <AF>fall to-that.place LOC-RED-water-LOC DM
  ??=PFV DM  see-LF-3SG.GEN=PFV GEN  deer LNK that
  deserve 2PL.NOM
  <AF>fall 2PL.NOM there
  FUT-die 2PL.NOM
  drown 2PL.NOM PART
  finally PART
  AF.afraid NOM dog that
  RED-carry.on.the.back-LF-3SG.GEN=PFV NOM  NOM this FIL person-3SG.GEN DM
  finally INT  arrive there maybe DM
  go.ashore=PFV 3PL.NOM DM
  EXIST one wood  big DM
  EXIST NOM den-3SG.GEN
  go=PFV child LNK that  quiet-AF.IMP
  EXIST NOM  make.noise there
  turn.out EXIST maybe INT  frog-3SG.GEN
  see-LF-3SG.GEN NOM friend-3SG.GEN DM
  go=PFV enter den-3SG.GEN  go-LF-3PL.GEN=PFV GEN  child LNK that and dog LNK that DM
  see-LF-3PL.GEN DM  EXIST=PFV NOM many.HUM  CLF.HUM-two=PFV INT
  do.something have-friend=PFV NOM  FS NOM frog LNK that DM
  AF-RED-laugh=PFV NOM  child LNK that
  finally PART  many.HUM=PFV NOM  frog LNK that DM
  RED-sing=PFV maybe AF-all
  REC-greet AF-all DM
  2PL.NOM do.something=PFV perhaps DM  FUT-go=PFV=1EPL.NOM  <AF>return say-3SG.GEN TU
  CLF.HUM-three 3PL.NOM
  this LNK dog
  this LNK frog-3SG.GEN DM
  tell-LF-3SG.GEN=PFV NOM this PART  other=REL frog  FUT-go=PFV=1EPL.NOM PART
  if when
  ?? COND definitely come ?? again
  say-3SG.GEN <AF>tell TU
  EXIST=PFV thanks say-3SG.GEN  GEN child LNK that
  this.way INT NOM story-1SG.GEN
