  now=EVI TOP IRR=see OBL
  be.at=VIS.MED-there LNK FIL
  VIS.MED-there LNK write-LF=MED.OBL
  see LNK  one child then EXIST what=DIST.NOM dog
  then because  EXIST what=DIST.NOM FIL  what=DIST.NOM frog be.at-inside LOC bottle
  then because  FIL what=DIST.NOM-there window=DIST.NOM EXIST what=DIST.NOM moon TOP 
  <L2MsoL2M> can 1IPL know COMP what=DIST.NOM 3PL TOP  uhm
  be.at-LOC.MED OBL night LNK <L2JtimeL2J>
  mmm  then because  FIL FIL evening because TOP
  then because  what=DIST.NOM dog CONJ child TOP   sleep=COS LOC bed TOP 
  what=DIST.NOM frog=DIST.NOM TOP   then AF-run.away AF-come.out LOC bottle=DIST.OBL
  then because  NEG COMP know-PF COMP whereto
  then because  FIL  FIL  suddenly-wake.up=COS child=DIST.NOM CONJ dog TOP
  3PL-DIST.NOM TOP AF-inspect OBL bottle COMP then
  why COMP then NEG.EXIST=COS VIS.DIST-there frog=DIST.NOM
  FIL  TOP  NEG 1IPL know COMP what=DIST.NOM-there frog=DIST.NOM TOP whereto
  so  IRR=  look.for-PF=1IPL
  FIL   then go-where-there frog=DIST.NOM then
  all VIS.DIST-there LNK all VIS.DIST-there
  what=DIST.NOM VIS.DIST-there
   child CONJ dog TOP  be.like=DIST.OBL all 3PL-DIST.NOM LNK nervous 3PL-DIST.NOM LNK then
  where-COS () OBL frog
  what=DIST.NOM frog=DIST.NOM be.at-in LOC bottle TOP but NEG.EXIST then
  all=DIST.NOM shoes  then open-PF all see COMP Q then go-inside LOC shoes=MED.OBL then
  what=DIST.NOM-there NOM dog TOP
  3SG-DIST.NOM FIL  go-inside head LOC
  be.at-DIST.NOM=there LNK FIL  put-LF ()OBL frog LNK bottle=DIST.OBL see COMP Q then 
  then NEG.EXIST FIL
  Q then go-inside=MED.OBL TOP but NEG.EXIST
  FIL  because
  then FIL  be.like=DIST.OBL 3PL-DIST.NOM COMP NEG COMP find 
  what=DIST.NOM-there dog TOP
  but FIL  FIL  then
  dog CONJ child=DIST.OBL TOP  then <L2M>FIL<L2M>  NEG FIL
  early.morning  early.morning=COS LNK  <L2M>tomorrow<L2M>
  morning=COS
  LNK FIL  what=DIST.NOM change-wake.up=COS TOP
  FIL  NEG 3PL=DIST.NOM rest search
  what=DIST.NOM-there dog TOP still COMP DIST.NOM  what=DIST.NOM-there head=DIST.NOM then  CAU-inside-PF LOC bottle=DIST.OBL
  because FIL
  FIL AF-believe dog COMP Q just be.at-inside=still=DIST.OBL what=DIST.NOM
  what=DIST.NOM-there FIL what=DIST.NOM-there
  FIL what=DIST.NOM-there child TOP then open NOM window AF-<RED>call AF-<RED>call COMP
  Q Q then AF-<RED>call COMP frog frog
  then COMP ribbit-ribbit then where=COS=OBL 2SG FIL then 
  <RED>shout-PF TOP
  IRR-because then be.at-LOC window TOP
  then dog TOP from be.at-LOC window  FIL  FIL  then REFL-fall
  from LOC window REFL-fall TOP
  then bang break NOM.DIST-there bottle NOM TOP
  FIL FIL  FIL see-LF go-there child=DIST.NOM then
  AF-sad heart COMP
  AF-immediately 3SG-DIST.NOM  go-below TOP then
  holding-PF NOM dog=DIST.NOM
  and then  FIL FIL  holding-PF dog then go-outside all 3PL-DIST.NOM
  AF-<RED>call then still COMP <RED>search
  <RED>search DIST.NOM-there LNK   AF-<PFV>head.to-lost LNK frog=DIST.OBL
  TOP  be.at-outside 3PL-DIST.NOM AF-<RED>call TOP but
  <L2J>luckily<L2J> what=DIST.NOM-there FIL  because  what=DIST.NOM-there 1IPL today TOP  see 1IPL COMP Q FIL  what=DIST.NOM-there tree-LF TOP  EXIST what=DIST.NOM  EXIST what=DIST.NOM call-PF COMP  FIL  hornet
  then TOP  what=DIST.NOM-there hornet=NOM.DIST COND hear ACC POSS person COMP
  COND CAU-disturb=LF.OBL POSS person LNK speech TOP
  TOP come.out 3PL-DIST.NOM <RED>look.for COMP  uhm IRR-sting
  so  AF-<RED>call 3PL-DIST.NOM ACC FIL
  dog CONJ child=DIST.OBL  AF-<RED>call ACC frog=DIST.OBL TOP
  what=DIST.NOM-there  what=DIST.NOM-there bu-bu-bu-hornet TOP  PFV-be.at-LOC.MED=EVI home TOP then
  all AF-come.out-  -come.out FIL  all AF-come.out-  all fly  when AF-come.out=COS COMP
  uhm  where=COS=OBL sound-DIST.NOM=EVI be.at-AF-<RED>call=EVI
  because  because what=DIST.NOM  what=DIST.NOM child=DIST.NOM CONJ dog TOP  then FIL IRR=  IRR=think 3PL-DIST.NOM NEG COMP know COMP
  what=DIST.NOM-there hornet  COND hear POSS person LNK sound TOP
  FIL FIL  TOP then all AF-come.out TOP
  then uhm
  uhm
  so see-LF=1IPL there-MED.OBL  still=NOM.DIST TOP  what=DIST.NOM  CONJ FIL  see OBL hole TOP then call-PF all
  then what=NOM.DIST-there dog TOP  see OBL POSS hornet LNK house TOP
  then <RED>bark then AF-<RED>call COMP
  <L2MwoofwoofL2M> <L2MwoofwoofL2M> <L2MwoofL2M> <L2MwoofL2M>
  <L2MwoofL2M>
  FIL   then what=DIST.NOM child TOP AF-<RED>call=OBL hole COMP
  Q Q be.at-inside=DIST.OBL what=DIST.NOM frog
  TOP  AF-<RED>call TOP
  suddenly-startle what=DIST.NOM-there FIL
  uhm  child=DIST.NOM then
  FIL
  why LNK Q
  FIL
  EXIST what=DIST.NOM mouse=MED.OBL from-inside LOC hole=MED.OBL Q
  FIL  FIL  FIL  in.detail-PF=1IPL look TOP
  what=DIST.NOM-there mouse=MED.OBL TOP  almost look.like field.mouse=DIST.OBL but then
  uhm what=DIST.NOM-there mouse TOP is.exactly
  little=DIM little
  TOP then=what=DIST.NOM LOC  then what=DIST.NOM dog TOP  then FIL  then NEG so 3SG-DIST.NOM know COMP
  what=DIST.NOM-there be.at-<RED>on LOC tree=DIST.NOM TOP
  be.at-<RED>on LOC tree=DIST.NOM TOP
  TOP EXIST FIL  look.like say-PF COMP  FIL  <L2MohL2M>
  hornet TOP
  AF-the.whole.time NOM dog=there <RED>bark
  <RED>bark COMP <L2woofwoofL2M> <L2woofwoofL2M>
  look.like=DIST.OBL=EVI 
  then
  then
  FIL  look.like=DIST.OBL-there dog=DIST.NOM Q FIL
  be.at-LOC tree NOM 3SG-DIST.NOM FIL
  fr- fr- FIL FIL  hold OBL tree=DIST.OBL AF-<RED>call OBL
  FIL  NEG  <RED>bark OBL VIS.DIST-there LNK hornet=DIST.OBL
  then
  FIL  then NEG COMP know COMP  then REFL-fall VIS.DIST-there  what=DIST.NOM FIL  hor- FIL  hor-  -net=DIST.NOM on.ground eh
  then because FIL  uhm what=DIST.NOM-there child=DIST.NOM TOP  see OBL tree COMP
  EXIST what=DIST.NOM hole
  TOP be.at-<RED>on=DIST.OBL 3SG-DIST.NOM see COMP
  FIL  go=COS  go=COS=DIST.OBL 3SG-DIST.NOM AF-<RED>call COMP Q Q be.at-inside=MED.OBL what=DIST.OBL frog
  what=DIST.NOM frog thus  uhm see 3SG-DIST.NOM OBL FIL  tree=DIST.NOM EXIST what=DIST.NOM hole
 what=DIST.NOM child=DIST.NOM TOP then AF-suddenly-immediately 3SG-DIST.NOM  go-<RED>on LOC tree=DIST.OBL
  FIL  Q Q be.at-inside=MED.OBL NOM frog be.at-there=MED.OBL 3SG-DIST.NOM AF-<RED>call
  all dog=DIST.NOM TOP  TOP FIL TOP still  AF-<RED>call <RED>look.for all
  then
  because
  MAZA child=DIST.NOM TOP go-RED-upside LOC tree LNK  because MAZA child=DIST.NOM TOP see OBL cave LNK FIL be.at-LOC FIL  FIL tree TOP
  yes=then  go-RED-upside MAZA child=DIST.NOM  FIL  face.to LOC cave=DIST.OBL AF<RED>yell TOP
  then  just EXIST LOC MAZA be.at-inside MAZA owl  AF-head.to-outside TOP MAZA child just  sudden-be.startled TOP just  from-upside LOC tree REFL-drop TOP thud=EVI ground
  yes=then  maza=there dog=DIST.NOM TOP  drop-PF 3SG.GEN just.now MAZA=there FIL  FIL  hornet
  chase.after-PF 3PL.OBL=OBL hornet=DIST.OBL   so  MAZA=there=DIST.NOM dog=DIST.NOM TOP AF-run.away TOP RED-chase-PF=OBL hornet II
  just join<RED>back DIST.NOM=there X MAZA FIL  MAZA=there X MAZA=there hornet=DIST.NOM AF<RED>chase OBL dog dog=DIST.OBL TOP 
  MAZA=there child=DIST.NOM TOP sudden-be.startled COMP  see OBL owl because LOC.MED  Q what LNK bird  sudden-be.startled TOP just from-LOC tree REFL-drop bang COMP ground
  FIL  because  FIL  FIL  MAZA  CAU-IRR=ground  AF-suddenly- MAZA  MAZA MAZA=there bird=DIST.NOM TOP  X X just fly also 3SG.NOM
  yes-then because FIL  yes-then because FIL  FIL then  FIL AV-VIS.MED-there MAZA  AV-VIS.MED-there MAZA stone=MED.NOM TOP see-LF COMP  FIL  EXIST=there similar OBL FIL  COND see-LF TOP similar OBL tree  but COND  see-truth-PF=1IPL.GEN see TOP  ANA similar OBL POSS  buffalo buffalo-antler LNK horn
  FIL yes TOP  FIL  because just  be.at-position-dorsal LOC stone=DIST.OBL TOP  FIL X X VIS.DIST-there  FIL  X FIL child=DIST.NOM TOP  NEG X FIL NEG 3SG.NOM RED-know COMP MAZA MED.LOC Q tree=DIST.NOM MED.LOC Q what=EVI TOP
  3SG.NOM TOP go-RED-upside LOC stone=DIST.OBL then  MAZA=there child=DIST.NOM TAL<RED>seize-LF 3SG.NOM   AF<RED>yell then  AF<RED>yell frog FIL maybe there child=DIST.NOM what=EVI AF<RED>yell OBL frog=DIST.OBL 
  MAZA=there dog TOP just  hide II because <PFV>chase OBL  chase-PF=OBL hornet=DIST.OBL 3SG.NOM TOP  be.at-ground LOC stone=DIST.OBL hide
  then because  yes-then  INT  then because MAZA=there  child=DIST.NOM TOP  X be.at-RED-upside because 3SG.NOM LOC stone=DIST.OBL  X FIL  stretch-hold==  stretch-hold== TAL<RED>seize OBL  similar=IS horn=DIST.OBL
  TOP  just exactly X  MAZA there FIL maybe there 3SG.NOM goat  X maybe LOC-PROX.NOM antler TOP  just become-stand there antler TOP
  just exactly there  FIL  child=DIST.NOM just FIL  just FIL just FIL  carry-transport-PF LOC POSS  FIL antler LNK head LNK horn=DIST.OBL
  then because MAZA=there goat=DIST.NOM TOP  just IRR=pass take TOP  maybe also goat TOP just sudden-be.startled also 3SG.NOM TOP  just  just AF-run.away also 3SG.NOM run-RED-road TOP
  just FIL  FIL  just FIL IRR  maybe goat=DIST.NOM TOP  just NEG COMP know COMP  MAZA FIL  IRR=run-RED-road-LF 3SG.GEN TOP  exactly X  X  look.down.from.cliff-LF TOP
  stop 3SG.NOM TOP  just MAZA=there child CONJ dog TOP  just FIL  from-RED-upside LOC POSS  antler=DIST.OBL LNK head=DIST.OBL  REFL-drop drop-to-ground LOC  FIL just  touch-to-ground LOC  similar OBL FIL  FIL maybe LOC-MED.NOM TOP water
  yes-TOP because  X FIL  FIL X what=LOC-MED.NOM what=LOC-MED.NOM TOP understand-LF COMP  just water LOC-MED.NOM
  than  MAZA child=DIST.NOM TOP just  from-RED-upside 3PL.NOM LOC POSS FIL  antler=DIST.OBL LNK head=DIST.OBL LNK horn=DIST.OBL  walk-together=OBL dog=DIST.OBL walk-two REFL-drop drop-to-inside LOC water
  FIL  yes=TOP  COND see-LF TOP although COMP touch-to-inside LOC water TOP
  yes=TOP COMP  FIL  be.able.to=1IPL.NOM know-PF COMP in.fact COND  FIL COND do.like=DIST.OBL COMP touch-to-inside water TOP  be.able.to 1IPL.NOM X AF-think COMP  why COMP FIL  why COMP
  be.able.to say-PF COMP what FIL  be.able.to say-PF COMP AF-good FIL
  so X  X IRR=see-LF=1IPL.GEN just.now=COS COMP  why COMP FIL COND touch-to-inside water TOP similar OBL AF-good
  3SG.NOM drop-to-inside LOC water TOP AF-immediately 3SG.NOM AF-state-sit become-stand then  carry.on.one’s.back-PF 3SG.GEN dog=DIST.NOM
  IRR=want 3SG.NOM X IRR-want 3SG.NOM go-RED-side
  FIL  FIL  when go-RED-side=DIST.OBL TOP EXIST MAZA be.at-RED-side=DIST.OBL  FIL  AF-big LNK tree  FIL AF-dry=COS LNK tree
  yes  yes=then because  3SG.NOM TOP  FIL 3PL.NOM TOP  TALI-seize 3PL.NOM tree=DIST.OBL because
  FIL  go-RED-upside 3PL.NOM LOC tree=DIST.OBL  FIL go-LOC RED-side
  then because  FIL  yes=then because  MAZA=there tree=DIST.NOM TOP similar OBL hole because TOP
  yes=TOP FIL  AF-be.afraid=COS VIS.DIST-there  child=DIST.NOM COMP IRR=just similar just.now COMP  AF<RED>yell LOC cave TOP  CAU-sudden-be.startled-PF=OBL bird  so say-PF 3SG.GEN VIS.DIST-there dog=DOST.NOM COMP  AF-be.quiet-IMP
  FIL NEG.IMP=COS=2SG.NOM RED-bark
  because  crosst 3PL.NOM tree=DIST.OBL  FIL  FIL  FIL  pass AF-leave
  yes=then because  FIL  cross 3PL.NOM TOP  FIL  see 3PL.NOM COMP FIL  then  just  sudden-be.startled 3PL.NOM COMP FIL why COMP EXIST
  then just FIL  FIL  EXIST  MAZA frog=DIST.NOM just two COMP
  yes=then  soon.after TOP  be.at-RED-upside 3PL.NOM LOC tree=DIST.NOM see TOP be.closed.to-neighboring there many=OBL  many=COS MAZA other   MAZA as.the.same.as 3PL.OBL LNK frog just ten AF-come
  COND see-LF TOP  one two three four five six seven eight nine ten  INJ just ten=COS then  ten=COS then frog AF-come  TOP MAZA=there child=DIST.NOM TOP
  maybe 3SG.NOM TOP FIL  3SG.NOM TOP  AF-good 3SG.NOM COMP then  just  FIL turn.out=there  FIL turn.out  MAZA frog=DIST.NOM TOP just NEG COMP  just  NEG COMP AF-head.to-lost
  yes=then  MAZA  original COMP FIL  FIL  <PFV>foster 3SG.GEN LNK frog=DIST.NOM TOP  just FIL  take-PF 3SG.GEN AF-leave
  then FIL  just FIL then  MAZA FIL other MAZA frog=DIST.NOM TOP  one two three four five six seven eight nine just=COS nine II because  original TOP ten because TOP
  yes=TOP  FIL take-PF=OBL child=DIST.OBL one  X IRR=AF-leave because IRR=go-house so
  so be.at-LOC.PROX=MED.OBL=1IPL.NOM see COMP
  FIL  although 3PL.NOM COMP  FIL  meet OBL FIL difficult COMP <PFV-PFV>pass-LF  COMP <PFV-PFV>pass-LF then  just FIL from-LOC POSS  FIL  FIL antler LNK head REFL-drop touch-to-inside LOC water TOP  but  touch-to-inside water TOP OBL yes=TOP  be.able.to=1IPL.NOM see COMP  AF-good II
  it.turns.out MAZA frog=MED.NOM TOP because  AF-like frog=DIST.NOM TALI-to-inside LOC water yes=then
  yes=then because FIL just  MAZA FIL yes=then MAZA=LOC=there  water LNK RED-side TOP  FIL EXIST MAZA tree=DIST.NOM TOP  what yes=then TOP what also frog=DOST.NOM TOP  AF-like also frog=MED.NOM  live-RED-upside LOC  RED-side=MAS water LNK tree
  so 3PL.NOM TOP  be.able.to say-PF  although COMP touch-to-inside water TOP  just  just AF-happy 3PL.NOM II because finally TOP  find-LF=OBL VIS.DIST-there LNK frog=MED.OBL then all=DIST.OBL
