  that then  must FIL  knead-PF.IRR FIL  FS water lukewarm     AF.mix PART AF.mix sugar then
   boil water that PFV.PART   thus    PART PFV.PART what PEV.PART  FIL cool-PF=2SG.GEN water that PFV.PART  that PFV.PART then
   FIL lukewarm PFV.PART  thus put-PF.IRR   urn NOM  FIL NOM plum EXIST PFV.PART then   thus CAU-go-PF.IRR   lukewarm NOM water <PFV>boil=2SG.GEN PART
  CAU-go-PF.IRR  FS FIL pour-PF.IRR  plum there NOM water PFV.PART   that self
   water sugar  that sugar PART   water sugar that   water <PFV>boil=2SG.GEN sugar that pour-PF.IRR   plum there PFV.PART   lukewarm PFV.PART PART   pour-PF
  that PFV.PART enough PFV.PART
    tell-PF.IRR PART black.bulbul 2SG.GEN 1IPL
   AF-finish PFV.PART PART
  be.like.this AF-finish  enough enough PFV.PART
   what PFV.PART   pour AUX.FUT say-PF go.FUT pick plum  say-PF go.FUT pick plum first
  go.FUT   plum   AF-go pick plum first   thus immerse=2SG.GEN   that PFV.PART enough PFV.PART
    dirty self   dirty self
   why NEG that PFV.PART
    FIL AF-go pick plum first
  then thus  be.like that PFV.PART PART   half FIL what PFV.PART   half.an.hour  half.an.hour  what half.an.hour word PN PFV.PART   NEG=1SG.NOM know word PN
  temporarily self half.an.hour DM  temporarily self half.an.hour PFV.PART PART NEG=1SG.NOM know   word PN
   half.an.hour immerse-PF=2SG.GEN  salt   salt first PART thus
  immerse-PF salt or salt
  yes then   remove FIL  remove again
   remove PFV.PART then  thus   immerse-PF=2SG.GEN water again   FS immerse-PF=2SG.GEN water lukewarm again   thus   one night
   one night immerse-PF=2SG.GEN water lukewarm
   DM   be.like next.day PFV.PART remove=2SG.GEN PFV.PART
   remove=2SG.GEN PFV.PART then thus   CAU-dry-PF=2SG.GEN  shadow PFV.PART PART
   CAU-dry-PF=2SG.GEN shadow PFV.PART   thus  AF-dry a.little PFV.PART thus   thus smash-PF=2SG.GEN PFV.PART
   smash-PF=2SG.GEN PFV.PART then  thus   FIL CAU-experience-PF=2SG.GEN dehydrate
   CAU-experience-PF=2SG.GEN dehydrate  then thus   AF-finish=2SG.GEN CAU-experience dehydrate PFV.PART thus   put-PF sugar
   AF-same all that PFV.PART
  put-PF sugar PFV.PART then  any self FIL   any self little a.little <PFV>put-LF sugar first
  NEG boil-PF.IRR that
  NEG boil-PF.IRR that
  then arrive MN-three put-PF sugar pour-LF-PF=2SG.GEN that   pour-LF-PF three.times
  MN-three   MN-three FIL put-LF PFV.PART  pour-LF-PF first thus   boil-PF sugar PFV.PART thus put-PF again
   thus self that pour-LF-PF PFV.PART   that PFV.PART
   enough PFV.PART   enough PFV.PART    see-LF time
