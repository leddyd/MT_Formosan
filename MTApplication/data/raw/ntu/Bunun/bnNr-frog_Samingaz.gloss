  EXIST COMP one child  FIL find OBL=LOC frog  take-PF 3SG.GEN foster then
  EXIST also 3SG.GEN dog
  FIL become-UNI=COS OBL 3SG.POSS LNK one COMP house
  FIL do.like=DIST.OBL 3PL.NOM COMP  AF-cherish OBL frog=PROX.OBL  FIL CAU-become-UNI OBL 3PL.OBL COMP one COMP house yes=then EXIST COMP night  3PL.NOM TOP AF-sleep
  FIL NEG COMP RED-know LOC AF-sleep LNK LOC deep.night=PROX.OBL TOP  frog=DIST.NOM TOP  RED-look.for OBL  3SG.POSS LNK LOC to.place-LF LNK tribe
  FIL do.like=DIST.OBL COMP  do-self 3SG.NOM  FIL become-stand FIL  leave LOC vat=DIST.OBL  FIL AF-go-road look.for OBL 3SG.POSS LNK  FIL conspecies
  yes-then become-sparkle=COS what=DIST.NOM=LOC COMP child=DIST.NOM
  INT see-LF=OBL 3SG.GEN COMP IF-NEG.EXIST
  FIL where what=DIST.NOM frog=DIST.NOM do.like=DIST.OBL also dog=DIST.NOM COMP RED-look.for  FIL Ca-bark COMP where what=DIST.NOM frog
  yes=TOP FIL AF-think 3PL.NOM LNK FIL== IRR=go-where there frog=DIST.NOM do.like=DIST.OBL COMP  REC-TU-hold.in.one’s.arm 3PL.NOM
  say-PF 3SG.GEN dog=DIST.NOM COMP IRR=go-there 1PL.NOM look.for OBL  COMP frog=DIST.OBL I NEG COMP know-PF COMP Q just EXIST take.away  Q how
  then AF-go-road 3PL.NOM do.like=DIST.OBL COMP  RED-look.for OBL=LOC frog
  be.at-somewhere.on.the.way-outdoor FIL be.at-somewhere.on.the.way<RED>where be.at-somewhere.on.the.way-river
  EXIST COMP one to.place-LF 3PL.GEN tree
  EXIST=still OBL=LOC hole then do.like=DIST.OBL child=DIST.NOM AF-think COMP  maybe NEG COMP hide-to-inside Q 3SG.NOM hole=DIST.OBL
  be.at-there 3SG.NOM AF<RED>yell COMP frog where 2SG.NOM
  yes=then what=DIST.NOM dog TOP POT-see-LF OBL be.at-LOC tree LNK LOC  POSS hornet LNK LOC house
  AF-think 3SG.NOM COMP Q be.at-LOC.PROX=DIST.OBL also NOM frog then
  do.like=DIST.OBL 3SG.NOM COMP  AF<RED>bark OBL=LOC LOC=COMP hornet LNK house=DIST.OBL 
  then shake-PF NOM what=DIST.NOM LOC LNK tree=DIST.NOM then NEG COMP know COMP  hornet=DIST.NOM TOP then shake-PF  3PL.NOM TOP IRR=AF-head.to-outside  AF-run.away
  be.at-LOC AF-shake LNK LOC  dog=PROX.OBL TOP  hit-ground-PF hit-move-PF what=DIST.NOM LOC LNK hornet=DIST.NOM drop-to-ground then
  what=DIST.NOM LOC 3SG  hornet=DIST.NOM TOP  become-together
  FIL  AF-think COMP IRR=take-PF dog=MED.NOM  bite
  do.like=DIST.OBL COMP  FIL  AF-go-road what=DIST.NOM LOC COMP hornet=DIST.NOM  IRR=AF-chase OBL LOC LNK dog=DIST.OBL yes=then what=DIST.NOM child=DIST.NOM TOP hide-to-LOC  tree RED-upside
  because EXIST hole AF-think 3SG.NOM COMP Q be.at-LOC.PROX=DIST.OBL I
  be.at-there 3SG.NOM find be.at-LOC.PROX-LOC-ground LNK LOC  stone LNK LOC cave=DIST.OBL go-RED-upside 3SG.NOM tree LNK cave=DIST.OBL AF<RED>yell COMP  where 2SG frog
  NEG COMP know COMP be.at-LOC.MED 3SG.POSS LNK AF<RED>call TOP  be.at-inside what=DIST.NOM LOC COMP  FIL  owl
  CAU-noisy-LF NOM become-sparkle 3SG.NOM  FIL become-sparkle 3SG.NOM AF-head.to-outside TOP sudden-be.startled child=DIST.NOM  MU-fall.down IF-to-ground=DIST.OBL from-LOC-tree=DIST.OBL
  all.the.way COMP  IRR=AF-chase OBL=LOC dog=PROX.OBL what=DIST.NOM dog TOP do.like=DIST.OBL also COMP AF-run.away  RED-chase-PF GEN hornet=DIST.GEN
  yes=then because what=DIST.NOM child=DIST.NOM TOP MU-drop TOP sudden-be.startled sudden-be.afraid
  go-RED-upside 3SG.NOM LOC stone AF-think COMP then  ANA say COMP do.like=DIST.OBL TOP IRR=look.for=still 3SG.NOM OBL frog=DIST.OBL
  go-RED-upside 3SG.NOM LOC rock=DIST.OBL TOP AF-along-mind 3SG.NOM COMP  FIL  EXIST what=DIST.NOM I COMP  deer
  COMP=LOC VIS.DIST-there horn=DIST.NOM TOP AF-along-mind COMP tree
  then stretch-catch-LF 3SG.GEN  become-to-RED-upside stone=DIST.OBL AF<RED>yell COMP INT frog where 2SG.NOM
  then what=DIST.NOM dog=DIST.NOM TOP  AF-keep-follow also OBL LOC COMP child=PROX.OBL
  hide-to-inside LOC  FIL stone=DIST.OBL FIL  leave LOC POSS  hornet LNK=LOC IF<PFV>chase=DIST.OBL
  then do.like=DIST.OBL 3PL.NOM COMP AF<RED>yell  then NEG COMP know COMP  what=DIST.NOM deer=DIST.NOM TOP  stretch-catch-LF what=DIST.NOM LOC COMP  NOM 3SG.POSS horn=DIST.NOM TOP
  FIL AF-sudden-stand 3SG.NOM  FIL AF-think COMP ANA AF-go-road-1IPL.NOM because EXIST what=DIST.NOM rival
  IRR=AF-catch LOC=COMP 1IPL.OBL TOP  NEG COMP know COMP what=DIST.NOM child TOP just  stretch-to-RED-upside LOC 3SG.POSS LNK body=DIST.OBL
  keep<RED>carry.on.one’s.back-PF 3SG.GEN
  AF-run.away what=DIST.NOM antler=DIST.NOM
  FIL AF-keep-follow also LOC LNK dog=DIST.NOM  FIL  join<RED>back OBL be.at-LOC.PROX LOC 3SG.POSS LNK
  FIL  FIL  FIL  people=DIST.OBL do.like=DIST.OBL COMP what=DIST.NOM antler=DIST.NOM TOP AF-go-road TOP
  X  see OBL position-A-front LNK IRR=IF-NEG.EXIST=COS NOM road then
  FIL  be.at-LOC.MED LOC  look.down.from.cliff-LF TOP  stop NOM 3SG.NOM TOP NEG COMP know COMP what=DIST.NOM  child=DIST.NOM TOP  IF-to.cast-fast because NEG.EXIST OBL=LOC AF-be.solid LNK hold-LF
  IF-to.cast-fast TOP MU-drop 3PL.NOM drop-to-inside LOC
  valley
  be.at-LOC.MED do.like COMP crag-LF   because be.at-LOC crag-LF=PROX.OBL TOP position-inside TOP EXIST LOC=COMP river  then child=DIST.NOM CONJ dog=DIST.OBL TOP  drop-to-inside LOC water
  FIL do.like=DIST.OBL 3PL.NOM COMP  FIL  X  cross.a.river
  FIL become-to-LOC.MED LOC RED-side FIL U-see-LF OBL=LOC tree COMP LOC  FIL AF<PFV>drift LNK AF-dry=COS
  then because say-PF 3SG.GEN dog=DIST.NOM COMP  FIL NEG.IMP=COS Q AF-noisy I because
  when.IRR AF-again 2SG.NOM whatever bark TOP  FIL IRR=do.like=DIST.OBL COMP  FIL U-many-LF  OBL  be.at-LOC.MED LOC <PFV>meet.up-LF do.like=DIST.OBL COMP LOC  FIL sudden-be.startled-PF 1IPL.GEN be.able.to find OBL frog=DIST.OBL TOP do.like=DIST.OBL 3PL.NOM COMP
  hide-to-RED-upside LOC tree=DIST.OBL TOP near-to-RED-upside 3PL.NOM LOC tree=DIST.OBL rest TOP INT  U-see-LF 3PL.NOM COMP FIL many=old no.wonder frog be.at-LOC.PROX=PROX.OBL=COS
  FIL AF-happy 3PL.NOM see frog LNK many=old meanwhile  see-LF 3PL.GEN TOP INT AV-VIS.DIST-there 3PL.POSS <PFV>foster LNK frog=DIST.NOM
  FIL so X  so take-PF 3PL.GEN  FIL what=DIST.NOM=LOC COMP 3PL.POSS  see-clear-LF 3PL.GEN see COMP AV-VIS.DIST-there  frog <PFV>foster 3PL.GEN  TOP take-PF 3PL.GEN then because
  face.to OBL=LOC  to.place-LF OBL many LNK frog=PROX.OBL say COMP  thank.you IRR=bring-PF=1SG.GEN there frog=COS  FIL do.like=DIST.OBL COMP AF-go-road=COS 3PL.NOM go-house
