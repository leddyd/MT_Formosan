  today PN  AF.come=2SG.NOM LOC-home-LOC-1SG.GEN
  good=PFV  AF-happy 1SG.NOM
  come-LF-2SG.GEN AF-visit PART  FS  1SG.NOM PART elder.sibling-2SG.GEN PART
  NEG=1SG.NOM OBL what  maybe PN
  good=PFV  later  eat=FUT=1IPL.NOM dinner maybe  drink=FUT=1IPL.NOM  say-1SG.GEN PART
  okay PART
  a.long.time=PFV=1SG.NOM NEG AF.come  X  AF-sorry=1SG.NOM too DM
  AF-near=1IPL.NOM  FS  a.long.time FS  just AF.come QA-one
  NEG=1IPL.NOM AF-visit  X  bad=PFV OBL RED-elder.sibling PART  BC
  that.way maybe
  FIL  1IPL.NOM relatives  do.something PART  FS relatives  if who  FS also EXIST=PFV  1SG.NOM PART  where relatives far  visit-LF-1SG.GEN
  past  LOC-Hualien-LOC maybe
  AF.go=1SG.NOM to Taipei maybe
  to Keelung  AF.go=1IPL.NOM <AF>see OBL  relatives-1IPL.GEN  I.tell=2SG.NOM
  EXIST X  FS  ??-male.elder-AN-2SG.GEN INT NCM-PN
  visit-LF.IMP also  BC
  AF.go=2SG.NOM  EXIST=PFV fish-3SG.GEN  EXIST wine-3SG.GEN
  EXIST maybe
  FUT-drink-NMZ-3SG.GEN 2SG.OBL  I.say
  X  <AF>shout=PFV 1SG.LOC
  go-AF.IMP  say-3SG.GEN=1SG.NOM DM
  X  BC  why  NEG=1IPL.NOM OBL free.time PART
  seem=PFV  not.know=PFV OBL  male.elder-1IPL.GEN there  NCM-  PN-LOC
  BC  not.long.ago  go-LF-1SG.GEN too QA-one DM
  EXIST LOC-road-LOC
  FUT-drink-NMZ-3SG.GEN 2SG.OBL  I.say
  X  <AF>shout=PFV 1SG.LOC
  go-AF.IMP  say-3SG.GEN=1SG.NOM DM
  X  BC  why  NEG=1IPL.NOM OBL free.time PART
  seem=PFV  not.know=PFV OBL  male.elder-1IPL.GEN there  NCM-  PN-LOC
  BC  not.long.ago  go-LF-1SG.GEN too QA-one DM
  EXIST LOC-road-LOC
  BC  EXIST ??-wine  3PL.NOM LOC-road-LOC DM
  FIL  enter-AF.IMP say-3PL.GEN=1SG.NOM
  <AF>enter=PFV=1EPL.NOM PART
  EXIST=PFV=1EPL.NOM there   chat X  chat  chat  chat=PFV  3PL.NOM PART  and friend-3PL.GEN  DM
  EXIST friend-3PL.GEN many.HUM  EXIST that  sister-in-law X  something that  spouse-3SG.GEN NCM-  PN
  NCM-PN  BC  DM  if  EXIST time COND  come-AF.IMP again  say-3SG.GEN=1SG.NOM DM
  okay say-1SG.GEN
  long=PFV also NEG AF.go  tired=PFV  that
  ache FIL  ache heart-3SG.GEN maybe COMP  why NEG  AF.come that  child this  <AF>see 1SG.LOC  say-3SG.GEN PART
  yes
  that.way for.example AF.go=1SG.NOM  LOC  LOC-Keelung DM  AF.go=1SG.NOM LOC-house-LOC GEN  elder.sibling NCM-PN
  INT  why only 2SG.NOM AF.come=REL
  why NEG AF.come  NCM-PN  group-PN
  those.people 1IPL.NOM Kavalan  NEG AF.come AF-visit 1SG.LOC  this.way
  unable=PFV=1SG.NOM <AF>walk
  tired=PFV only
  not.know=1SG.NOM  not.know=PFV=1SG.NOM OBL road  BC  say-3SG.GEN  BC
  that.way=PFV  where-NAF-1IPL.GEN say-NAF-1IPL.GEN  3PL.NOM couple there  must come=PFV  AF-visit say-1SG.GEN
  FS  wonder=1SG.NOM COMP NEG  child LNK that AF-visit OBL  how  indeed AF.go=1IPL.NOM DM
  INT NEG=2PL.NOM AF-visit  absolutely say-3SG.GEN 1IPL.OBL PART
  NEG=1IPL.NOM that.way
  what’s.left-only that  ??-elder-AN-1IPL.GEN here that 3PL.POSS   crowd  X  elder.sibling-1IPL.GEN say-1SG.GEN
  yes  indeed=PFV  that  often year  AF.dance=1IPL.NOM here
  give-LF-1SG.GEN=PFV also OBL  FUT-come-NMZ  OBL  something  OBL
  X  invitation.card that  BC  come-AF.IMP say-1SG.GEN
  that.way maybe  bad=PFV leg-3SG.GEN  unable=PFV <AF>walk  NEG=PFV AF.come PART
  BC   FS   year eighty  eighty-three year that  FS  ??-two harvest.ritual GEN Kavalan 
  ninety-three   FIL  ninety-three  DM   AF-surprised=PFV=1SG.NOM  EXIST elder.sibling NCM-PN  AF.come
  BC  sick say-3PL.GEN
  INT  why  EXIST elder.sibling-1SG.GEN NCM-PN PART  say-1SG.GEN
  that.way QENA-happy-1SG.GEN OBL  <PFV>come GEN  FS GEN elder.sibling-1SG.GEN maybe  say-1SG.GEN
  so think=1SG.NOM  NCM-PN-LOC past
  BC  BC  why only 3SG.NOM NEG AF.come say-1SG.GEN
  so say 2SG.OBL
  next.time EXIST car-2SG.GEN like.this  take-LF.IMP AF.come  to to  to  house-1IPL.GEN  to Taipei-LOC  harvest.ritual-1IPL.GEN like.this
  I.say=2SG.NOM say-1SG.GEN
  real=PFV 那個  male.elder-1EPL.GEN NCM-PN yesterday   AF.come=REL DM
  AF-surprised  AF-surprised=PFV=1SG.NOM heart-1SG.GEN  AF-surprised heart-1SG.GEN  <AF>see OBL  male.elder that
  DM  male.elder-1IPL.GEN for.a.long.time=PFV NEG  AF-see
  today  X  AF-participate OBL  QENA-gather-1IPL.GEN here
  DM dance-LF-1IPL.GEN  say-1SG.GEN DM
  take-LF-1SG.GEN=PFV PART  lead.by.the.hand-LF-1SG.GEN=PFV  toward.there LOC
  LOC-front-LOC
  LOC-front-LOC
  CAU-sit LOC-front-LOC
  that.way=PFV  FUT-happy-NMZ X  <AF>see=PFV=1SG.NOM OBL  FS  child-1IPL.GEN  junior-1IPL.GEN  younger.sibling-1IPL.GEN  probably say GEN heart-3SG.GEN
  that.way-LF-1IPL.GEN PART  behavior-1IPL.GEN GEN Kavalan NEG=1IPL.NOM AF-bad  OBL relatives
  NEG=1IPL.NOM bad OBL  this OBL  elder-1IPL.GEN AF-all
  who X  X  who also forget OBL  relatives here
  know relatives-1IPL.GEN
  that elder-1IPL.GEN  EXIST where
  know-LF-1IPL.GEN=PFV DM  ??  old-LF=PFV  sometimes  unable <AF>walk=1SG.NOM  FIL  bad  bad=PFV body-1SG.GEN  say-3PL.GEN DM
  NEG=PFV=1IPL.NOM AF-out OBL  1IPL.POSS=REL  FS  QENA-gather  say-1SG.GEN 
  that.way=PFV  if that.way PART  EXIST NOM  where maybe  EXIST NOM  AF-marry=REL
  definitely leave=1IPL.NOM help  FIL AF-do.something PART  work maybe   NEG OBL people 3PL.NOM
  definitely help-LF-1IPL.GEN
  like  marry=REL maybe  if AF-die=REL  definitely go-LF-1IPL.GEN and  child child  say-1SG.GEN
  BC that.way=PFV  that.way=1IPL.NOM   have-child OBL male  that.way-LF-1SG.GEN child-1SG.GEN
  NCM-PN  PN that.way  big=PFV=2SG.NOM  PART  FIL many.NHUM=PFV year-2SG.GEN
  how COND  RED-visit-AF.IMP OBL relatives also say-1SG.GEN
  that.way=PFV mother  say-3SG.GEN
    behavior-3SG.GEN GEN PN  leave=PFV not.know  work=1SG.NOM say-3SG.GEN
  so  FS X  NEG work say-1SG.GEN come-AF.IMP  listen OBL story-1EPL.GEN  say-1SG.GEN DM
  work=FUT=1SG.NOM  say-3SG.GEN
  EXIST that  work-NMZ-3SG.GEN how-NAF-1IPL.GEN
  if  keep-LF-2SG.GEN COND
  EXIST work-NMZ-1SG.GEN  leave-LF-1SG.GEN COND  who=PFV  NEG say-3SG.GEN  GEN  FS FIL  child think
  BC that.way=PFV
  indeed=PFV PFV-think-NMZ-2SG.GEN  that  3SG.POSS  INT  3SG.POSS  PFV-gather-NMZ-1IPL.GEN  here  long.time=PFV=1IPL.NOM
  ten EXIST  CLF.NHUM-five=FUT=PFV PART
  BC  X  BC  ten EXIST CLF.NHUM-five=FUT=PFV year  PFV-gather-NMZ  here
  why CAU-QA-up OBL  this gather-NMZ
  know-LF-2SG.GEN PART
  EXIST that thing-1IPL.GEN  able=FUT=1IPL.NOM REC-RED-tell
  FIL  if EXIST FUT-help-NMZ COND  go-LF-1IPL.GEN AF.help relatives-1IPL.GEN  say-3SG.GEN GEN
  PFV-CAU-gather-NMZ OBL  3SG.POSS X  3SG.POSS past=REL  PFV-think-NMZ  OBL this
  OBL FUT-gather-NMZ
  that.way=PFV  that.way-NAF-1IPL.GEN behavior-1IPL.GEN maybe
  NEG=PFV=1IPL.NOM REC-QA-unable  good=PFV
  this.way far scattered
  EXIST LOC-Taipei-LOC  EXIST LOC-  banqiao-LOC  EXIST LOC-xinzhuang-LOC   PART
  EXIST LOC-Taipei-LOC  EXIST LOC-  banqiao-LOC  EXIST LOC-xinzhuang-LOC   PART
  AF-visit X  like 1EPL.NOM elder  NEG=1EPL.NOM OBL  car DM
  EXIST=1EPL.NOM LOC-home-LOC and OBL child
  EXIST car=2PL.GEN COND  go-AF.IMP RED-visit  NEG=FUT AF-forget 1IPL.OBL DM
  do.something okay child  NEG=FUT PART  AF-forget speak-NMZ GEN  Kavalan maybe
  EXIST=PFV NOM X  definitely AF-happy 3PL.NOM
  teach-LF.IMP NOM child-2PL.GEN  say-1IPL.GEN <AF>tell
  ?? QA-know=PFV child-3SG.GEN  if teach-LF-3SG.GEN
  NEG say-LF-1IPL.GEN  NEG=1EPL.NOM  speak-NMZ teach OBL 3PL.POSS Kavalan
  lose=PFV=1IPL.NOM OBL Kavalan  NEG that.way-NMZ
  X  indeed=PFV  indeed=PFV speak-NMZ this
  afterwards COND  FUT-EXIST=still Q
  like  like=PFV PFV-say-NMZ-2SG.GEN  disappear=PFV  speak-NMZ-1IPL.GEN COND
  NEG=PFV=1IPL.NOM OBL  speak-NMZ COND how-LF=PFV
  only elder-AN  can.only
  old-LF=PFV  that child NEG <AF>follow  OBL speak-NMZ-1IPL.GEN COND
  FUT-EXIST=still speak-NMZ-1IPL.GEN
  break=PFV there
  FS 2PL.NOM grandma=PFV  FIL that  male.elder-AN COND  teach=1EPL.NOM  say-3PL.GEN GEN child maybe DM
  because  child-1IPL.GEN  FS many.NHUM that  FUT-learn-NMZ-3PL.GEN 3PL.NOM now
  see-LF-1IPL.GEN that  do.something-LF-3SG.GEN PART  that back.bag-3PL.GEN  DM  RED-full
  how-LF-3PL.GEN=FUT=PFV not.know  FS  <AF>put OBL  LOC-head
  LOC-head-LOC-3PL.GEN OBL  book that  say-1IPL.GEN
  like  today  EXIST today other COND  want teach OBL  teach OBL speak-NMZ-1IPL.GEN PART
  OBL 3PL.POSS Kavalan
  3PL.POSS Kavalan DM
  good=PFV
  X  if EXIST FUT-follow-NMZ COND X   OBL 3PL.POSS
  Kavalan that  NEG=FUT AF-disappear
  learn-LF-3PL.GEN=FUT GEN RED-grandchildren-1IPL.GEN  RED-child-1IPL.GEN
  FUT-EXIST=FUT=PFV PART  do.something=FUT NEG=FUT NEG NOM  speak-NMZ-1IPL.GEN  I.say=2SG.NOM
  yes that.way=PFV
  like now  teach-NMZ OBL 3PL.POSS  Mandarin maybe  speak-NMZ definitely that.way=PFV
  story-3PL.GEN 3PL.NOM  CAU-come.out-LF-3PL.GEN  learn-LF GEN child X
  FS bad  AF-bad ?? that.way-LF-1IPL.GEN CAU-come.out  3PL.POSS Kavalan=REL
  speak-NMZ maybe  what  earnestly=FUT=1IPL.NOM  speak OBL FS  RED-child-1IPL.GEN X
  FUT-EXIST=FUT  FS  FUT-learn-NMZ-3PL.GEN  write-LF-3PL.GEN=FUT COND
  EXIST=PFV FS  FS FUT-teach-NMZ-3PL.GEN OBL friend-3PL.GEN  DM
  X  QA-understand=FUT friend-3PL.GEN  AF-all COND
  QA-understand=FUT OBL 3PL.POSS Kavalan say-1SG.GEN
  if afterwards  today FS  AF.come 1SG.NOM  X
  CAU-learn-NMZ this  definitely that.way=PFV  AF-teach OBL speak-NMZ-1IPL.GEN
  that.way I.say=2SG.NOM PN
  that.way I.say=2SG.NOM PN
  that.way I.say=2SG.NOM PN
  that.way I.say=2SG.NOM PN
  that.way I.say=2SG.NOM PN
  QA-good-?? 2SG.NOM speak OBL  teach OBL CAU-learn-NMZ-3PL.GEN
  friend GEN this.person  GEN CLF.HUM-two=REL I.say=2SG.NOM
  good=PFV  that.way that  speak-NMZ-1IPL.GEN
  BC  EXIST heart-1SG.GEN COMP  CAU-stand-NMZ OBL 3PL.POSS  teach-NMZ OBL  child-1IPL.GEN here
  BC  however  LOC-up=REL  want OBL 1IPL.POSS  OBL  how-LF-2PL.GEN=FUT  just good  COND
  CAU-go.out-LF.IMP OBL PFV-  think-NMZ-2PL.GEN  just good
  know=FUT=1EPL.NOM think COMP  how-LF-1IPL.GEN  CAU-go.out OBL  money OBL  FS ?? ??  FUT-study-NMZ GEN  child here  say-3PL.GEN
  BC  that.way
  EXIST heart maybe  EXIST that PFV-  write-NMZ-1SG.GEN DM
  NEG=yet AF.arrive  also OBL  QA-good-NMZ maybe DM
  NEG=yet AF-go.out=PFV PART  DM
  wait-??  possible  possible afterwards  another=REL year COND
  FUT-go.out=PFV  TU  this.way=REL  FUT-teach-NMZ-1IPL.GEN OBL  child-1IPL.GEN
  INT  1IPL.NOM FS  male.elder  good  female.elder  good  want=still=1SG.NOM  again OBL  FUT-know-NMZ-3PL.GEN  FUT-know-NMZ OBL 3SG.POSS FS  Kavalan that speak-NMZ  COND
  listen=FUT=1SG.NOM again there
  study=FUT=1SG.NOM again there
  NEG say-3PL.GEN also GEN  elder-AN Q  think
  NEG=1EPL.NOM  NEG=1SG.NOM OBL  only child  say GEN heart
  male.elder-AN  female.elder  EXIST  EXIST heart-3PL.GEN  want  do.something  learn  learn there COND
  all-LF-1IPL.GEN  AF-take say-1SG.GEN PART
  that.way=PFV  like sometimes AF.go=1IPL.GEN  dance maybe  sing X
  INT  EXIST=PFV Kavalan  FIL say-3PL.GEN
  how-NAF-?? <AF>teach
  if EXIST study-NMZ DM  teach say-1SG.GEN  good=PFV competent  heart-1SG.GEN <AF>teach 2PL.OBL  say-1SG.GEN
  INT how-NAF-1IPL.GEN PART  teach=1EPL.NOM OBL CLF.NHUM-three say-3PL.GEN
  like=PFV the.other.day  harvest.festival there  see-LF.IMP INT
  EXIST=PFV=1EPL.NOM there NCM  NCM-PN PART  FS that  AF.get.along 2PL.LOC  DM
  FS hurry.up sing-AF.IMP say-3PL.GEN OBL 3PL.POSS Kavalan  EXIST=PFV=1EPL.NOM FS  sing 3PL.POSS Kavalan
  DM  AF-not.know  why that.way=2PL.NOM PART  FIL pronunciation-2PL.GEN unable speak
  NEG=1EPL.NOM that.way Kavalan PART
  speak  one.time X  AF-speak DM  know=PFV=1EPL.NOM
  speak  speak Japanese  speak Mandarin  speak Amis  speak any  know=2PL.NOM speak-NMZ  say-3PL.GEN
  INT  indeed skillful=2PL.NOM Kavalan  say-3PL.GEN=1SG.NOM
  EXIST=PFV  teach-LF-1SG.GEN  what also   AF-run NOM  NOM  NOM FS  speak-NMZ GEN tongue-3PL.GEN OBL  that.way  learn=FUT=1EPL.NOM OBL 3PL.POSS Kavalan  INT say-3PL.GEN
  okay PART  go=FUT=1EPL.NOM learn  say-3PL.GEN=1SG.NOM   
  good=PFV PART  2SG.NOM teach=REL    good=PFV
  so.that  EXIST teach=REL  so.that AF-happy  3PL.NOM that
  that.way 3PL.NOM many.HUM  something  teach=1EPL.NOM say-3PL.GEN
  how PFV-speak-NMZ-2PL.GEN  not.know=1EPL.NOM   AF-listen  say-3PL.GEN
  INT INT  X  competent=1IPL.NOM Kavalan  think-1SG.GEN PART
  indeed=PFV know OBL  BC  this  <AF>respond OBL what  X  OBL speak-NMZ GEN others
  that.way  NEG=1IPL.NOM QA-criticize-LF Kavalan  X
  indeed  NEG=1IPL.NOM  QA-criticize-LF perhaps
  FIL  that.way NOM  hebavior-1IPL.GEN GEN Kavalan  competent
  at.once  AF-learn NEG like 3PL.NOM OBL  this think-1IPL.GEN DM  INT  knot.up  why dunno
  MA-twist also    speak-NMZ GEN 3PL.NOM DM  how-NAF-1IPL.GEN
  that  3PL.POSS 3PL.NOM=REL  do.something speak-NMZ know 3PL.NOM DM  know 3PL.NOM speak-NMZ-3PL.GEN PART  1IPL.NOM DM  know 1IPL.NOM AF-listen maybe FS  perhaps that  OBL 3PL.POSS 3PL.NOM=REL DM
  however  listen-LF 1IPL.NOM  speak OBL 1IPL.POSS=REL  speak-LF-1IPL.GEN Kavalan DM
    NEG  why that.way PART  like=PFV that  speak.ill.of say-3PL.GEN
  NEG speak.ill.of definitely DM
  X  speak.ill.of=2PL.NOM 1EPL.OBL  say-3PL.GEN
  3PL.NOM unable AF-listen PART
    BC PART  speak.ill.of=2PL.NOM  say-3PL.GEN NEG=1EPL.NOM speak.ill.of
  X  FS  tell.story=1EPL.NOM NCM-PN  X  FS  AF.meet=1EPL.NOM NCM-PN DM
  <AF>speak-Kavalan=1EPL.NOM NCM-PN
  INT  what say-2PL.GEN=PFV CLF.HUM-two
  why ??  FS  like=PFV=1EPL.NOM OBL  this  unable=PFV=1EPL.NOM AF-listen  say-3PL.GEN
  when  AF.meet=1IPL.NOM DM  speak Amis 2PL.NOM PART
  FIL know 1EPL.NOM OBL Amis  INT why that.way=1EPL.NOM  unable=1EPL.NOM  say-3PL.GEN DM
  some.time.ago harvest.festival 1EPL.NOM
  night that.way  also AF.go=1EPL.NOM there LOC-park-LOC
  INT   PN  FIL  pickle-LF.IMP NOM  laver that  say-1SG.GEN DM
  INT  what say-2PL.GEN=PFV speak.ill.of  say-3PL.GEN
  NEG=1SG.NOM speak.ill.of
  speak  speak-  Amis-LF-1SG.GEN=PFV  pickle-LF.IMP NOM  NOM  that  laver that NOM  green.seaweed
  EXIST NOM pepper  EXIST NOM salt  say-1SG.GEN DM
  pickle-LF-3SG.GEN=PFV PN  X
  who AF-take=REL  say-3PL.GEN
  1SG.NOM PART  who AF-take=REL PART
  child-1SG.GEN  AF.go pick-laver  say-1SG.GEN
  competent child-2SG.GEN PART
  pick-laver  that.way definitely  1EPL.NOM GEN  Kavalan  only sea say-1EPL.GEN
  AF.go X  X  AF.go=1EPL.NOM to sea DM
  leave=PFV pick-laver maybe  FS  pick-taiwanese.abalone maybe  pick-  lobster  NOM  male
  1EPL.NOM female  leave=PFV=1EPL.NOM  pick-chiton maybe  pick-limpet=1EPL.NOM DM
  X  boil-LF-1EPL.GEN=PFV LOC-sea
  X  1IPL.NOM Kavalan PART  roast-LF-1IPL.GEN
  like sibling-1SG.GEN NCM-PN PART  FS  X  FIL return=1IPL.NOM  INT  AF.go=1IPL.NOM to sea DM
  FS AF-take=PFV OBL vegetable OBL PFV-till-NMZ-1IPL.GEN  CAU-gather-LF-3PL.GEN=PFV  wash-LF-3PL.GEN=PFV DM
  finish=PFV  put-LF-3PL.GEN=PFV LOC-container-LOC
  burn=PFV OBL stone  finish burn OBL stone DM
  put-LF-3SG.GEN=PFV NOM   NOM  stone that  boiling=PFV TU  why  good eat-NMZ maybe  PFV-cook-NMZ
  DM this.way-LF-1IPL.GEN  NEG dirty
  if roast-LF-1IPL.GEN  black pot
  this.way  yes
  FIL  EXIST that  something that  roast-NMZ  good=also  roast-LF-2SG.GEN DM
  fish-1IPL.GEN  roast-LF-1IPL.GEN  OBL  AF-scorched  this  savory
  yes
  FIL savory=PFV  red=PFV that soup-3PL.GEN  DM
  NEG  FIL NEG  NEG do.sth-LF OBL  wok-1IPL.GEN  FS AF-cook
  only-LF-1IPL.GEN a.way.of.cooking.fish  X X  good=PFV
  that.way=PFV
  a.way.of.cooking.fish-LF  only good X  real that 3PL.POSS Kavalan  DM COND  DM  PFV-roast-NMZ that  fish OBL
  PFV-pick.food.at.sea-NMZ  all-LF PFV-harvest-NMZ-1IPL.GEN LOC-seashore-LOC
  that.way=PFV
  INT  AF.go to sea 1IPL.NOM  1IPL.POSS Kavalan PART
  X  like AF.go=1IPL.NOM to river DM  leave=PFV
  like X  father-1SG.GEN PART
  go  ?? to-river=FUT=1IPL.NOM  say-3SG.GEN DM
  prepare=PFV OBL  hoe perhaps  dustpan perhaps  that an.instrument.for.catching.fish-3SG.GEN
  leave=PFV=1EPL.NOM to river DM
  block-LF-3SG.GEN=PFV river that
  FS  obstruct=FUT=1IPL.NOM say-3SG.GEN
  AF.go=PFV=1EPL.NOM  obstruct-LF-1EPL.GEN=PFV great=REL river
  finish=PFV DM  look.for-LF-1EPL.GEN=PFV NOM  INT  shrimp-3PL.GEN maybe  a.kind.of.fish-3PL.GEN perhaps  crab-3PL.GEN
  all=PFV PFV-take-NMZ-1EPL.GEN  finish=PFV DM
  CAU-an.instrument.for.catching.fish-LF-3SG.GEN=PFV  LOC-below
  AF.afraid ??-run-LF-3SG.GEN maybe GEN  float=REL  shrimp-3SG.GEN fish-3SG.GEN DM
  FS  toward-upside-LF-3SG.GEN=PFV  an.instrument.for.catching.fish-3SG.GEN
  <AF>eat  eat=FUT=1IPL.NOM=PFV eat-lunch  say-3SG.GEN DM
  EXIST=PFV=1EPL.NOM  AF-cook maybe  <AF>eat=PFV=1EPL.NOM DM
  EXIST  EXIST an.instrument.for.catching.fish that X  <AF>descend FS shrimp maybe  DM
  take-LF-3SG.GEN=PFV GEN  good=PFV
  do.something-LF GEN  an.instrument.for.catching.fish that
  NEG=PFV=1IPL.NOM rummage  that.way
  all=PFV LOC-  an.instrument.for.catching.fish-LOC-3SG.GEN GEN  X X  <AF>enter LOC-an.instrument.for.catching.fish-LOC
  yes  only maybe  crab  NEG <AF>descend DM
  that  turn.over-LF-1EPL.GEN=PFV stone DM
  pick-LF-1EPL.GEN=PFV NOM crab perhaps  NEG <AF>descend=REL
  that.way NOM  custom GEN Kavalan
  yes indeed=PFV that  something there LOC  LOC-village  LOC-village-LOC  before PFV-  do.something-NMZ-1IPL.GEN
  PFV-  RED-how-NMZ  look.for-LF  AF.go to seashore  to river-LOC    all
  indeed that  NEG OBL  AF-cook OBL what
  only  3PL.POSS  river=REL  3PL.POSS river=REL only dish-1IPL.GEN
  3PL.POSS sea=REL  only 3PL.POSS sea=REL dish-1IPL.GEN
  that.way indeed that 3PL.POSS  QENA-live GEN Kavalan  there LOC  LOC-village-LOC before  think-1SG.GEN PART
  like past PART  EXIST  EXIST=still=1SG.NOM LOC-  village-LOC-1IPL.GEN LOC-PN-LOC DM
  pick.food.at.sea=FUT=1IPL.NOM  say GEN grandmother DM
  EXIST=PFV=1EPL.NOM  to  this  go=FUT=1IPL.NOM to sea  say-3PL.GEN
  DM  <AF>pack=PFV=1EPL.NOM OBL rice
  only salt DM  pepper PFV-pack-1EPL.GEN
  leave=PFV=1EPL.NOM to sea
  BC  EXIST=PFV=1EPL.NOM  pick.food.by.sea DM
  FIL that  EXIST NOM FS  return=PFV=1EPL.NOM  AF.go pick.food.by.sea
  many.NHUM NOM PFV-till-NMZ-1EPL.GEN DM
  EXIST in.addition  AF.come EXIST guest-1IPL.GEN FIL  PN maybe  there that DM
  FS NEG FS  FS NEG  unable=still pick.food.at.seashore 3PL.NOM PART
  BC  INT  know 2PL.NOM INT pick.food.at.seashore  say-3PL.GEN DM
  help  someday AF.go=PFV  say-3PL.GEN to sea  say-3PL.GEN PART
  finish=PFV DM  unable AF-preserve.meat  3PL.NOM rot
  BC  ?? boil-LF-3PL.GEN=PFV GEN  AF-all PFV-  pick.food.at.seashore-NMZ-3PL.GEN
  that.way  3PL.NOM past
  only 1IPL.NOM Kavalan  FIL know  COMP till-NMZ  OBL something maybe  FS  FIL  OBL  FUT-dish-NMZ DM  FIL  1IPL.NOM GEN Kavalan
  past X  like see-AF.IMP group-  PN past unable  pick.food.at.seashore-NMZ
  mother-3SG.GEN  X   till  3PL.NOM NEG  X  NEG OBL time  time
  NEG OBL time  AF.go to sea
  DM  NEG OBL  teach=REL OBL  go to sea
  DM how-LF-1IPL.GEN PFV-  pick.food.at.seaside-NMZ
  BC  that  do.something  OBL  PFV-take-NMZ-3PL.GEN  3PL.NOM unable=PFV  unable AF-preserve  unable AF-preserve maybe DM  X
  RED-rot=PFV  can.only-LF-3PL.GEN=PFV AF-boil PART
  X  group-grandmother-1IPL.GEN past DM  DM  chiton-3PL.GEN  CLF.NHUM-three month maybe  FS  ??-month DM  open-LF-3PL.GEN=PFV
  NEG=PFV OBL FS  X  NEG=PFV OBL shell.of.chiton NEG  BC  remain-shell  remain-something=PFV  meat-3SG.GEN GEN  meat=PFV  INT  X
  anyway X  PFV-preserve-NMZ GEN grandmother-1IPL.GEN past  that.way-LF-3PL.GEN
  grandmother-1IPL.GEN past  now  like X  child-1IPL.GEN now  know=still Q pick.food.at.seaside  unable=PFV
  want-LF-1SG.GEN teach  FIL child-2PL.GEN say-1SG.GEN PART
  take I.think to sea  CAU-pick.food.at.seaside I.think
  or AF.go to river PART
  CAU-catch.fish-LF-1SG.GEN NCM-PN  say-1SG.GEN PART
  know X  X  unable=PFV  NEG=PFV  NEG <AF>see COMP AF.catch.fish
  how-LF-1IPL.GEN AF.catch.fish  NEG say-3SG.GEN
  defintely teach-LF  definitely know=PFV
  definitely  next.time COND  if EXIST time-2SG.GEN COND  take-LF.IMP AF-all    that  child AF-all COND
  teach  FIL teach-LF.IMP=PFV COMP  how-LF-1IPL.GEN catch.fish  how-LF-1IPL.GEN  pick.food.at.seaside
  tell.them PART
  that.way X  that.way only speak-NMZ-1IPL.GEN PART  today  INT  BC  AF-pass=PFV something-1IPL.GEN
  BC
