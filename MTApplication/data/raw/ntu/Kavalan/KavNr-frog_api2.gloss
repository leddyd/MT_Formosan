 once.upon.a.time say-3SG.GEN PART
    EXIST NOM child LNK that say-3SG.GEN  PART
  <AF>raise OBL dog  CLF.HUM-two OBL dog-3SG.GEN say-3SG.GEN  DM
  EXIST NOM  frog-3SG.GEN raise GEN LOC-  urn-LOC say-3SG.GEN
  LOC-bottle-LOC  DM
  evening AF.sleep=PFV NOM  child LNK that DM
  dog LNK that DM  EXIST=PFV say-3SG.GEN  AF.play want play  LOC  frog-3SG.GEN say-3SG.GEN  LOC-urn-LOC say-3SG.GEN  DM
  child LNK that NEG want  sleep DM  PART
  get.up=FUT=1IPL.NOM
  EXIST NOM dog-1IPL.GEN <AF>see  OBL frog LOC-  urn-LOC
  say-3SG.GEN=PFV GEN  LOC-bottle-LOC  say-3SG.GEN=PFV GEN child LNK that  say-3SG.GEN DM
  AF.get.up=PFV  NOM child LNK that DM
  EXIST=PFV <AF>see OBL frog-3SG.GEN say-3SG.GEN  DM
  EXIST frog LNK that DM good see-LF-3SG.GEN frog LNK that  NEG AF.wake.up  also frog LNK that DM
  INT  AF-beside LOC frog-3SG.GEN NOM  child LNK that  say-3SG.GEN
  3SG.NOM and dog-3SG.GEN say-3SG.GEN  PART
  X    that’s frog LNK that DM
  AF-run=PFV say-3SG.GEN PART  AF-run.out=PFV  say-3SG.GEN frog LNK that
  AF-run.out LOC-bottle-LOC  say-3SG.GEN
  want=PFV run NOM NOM  frog LNK that say-3SG.GEN DM
  that’s child LNK that  AF.sleep say-3SG.GEN DM
  INT
  X  FS NEG=PFV NOM frog  EXIST=PFV NOM frog-3SG.GEN AF-exit DM
  see-LF GEN child LNK that DM
  INT why NEG=PFV NOM frog-1IPL.GEN PART  say GEN child LNK that say-3SG.GEN DM
  AF.get.up=PFV  say-3SG.GEN child LNK that  want catch LOC frog-3SG.GEN
  DM  want catch LOC frog-3SG.GEN
  NEG=PFV LOC-bottle-LOC  want catch DM
  NEG=PFV NOM frog LNK that say-3SG.GEN
  3SG.NOM LOC dog-3SG.GEN   something PART  <AF>see LOC frog-3SG.GEN  LOC NEG=PFV  DM
  that’s this child LNK this DM
  INT  EXIST LOC  there I.wonder frog LNK that  frog  this be frog PART
  frog Q
  see-LF GEN child LNK that DM  INT  EXIST PART frog LNK that here
  say-3SG.GEN=PFV GEN  bark-LF GEN dog-3SG.GEN that  frog that DM
  find-LF-3SG.GEN=PFV GEN child LNK that say-3SG.GEN DM
  EXIST=PFV  RED-happy=PFV DM
  play.in.hand-LF-3SG.GEN=PFV frog LNK that say-3SG.GEN
  GEN child QENA-happy-NMZ  say-3SG.GEN
  DM  leave=PFV  AF-happy=PFV NOM  child LNK that  EXIST=PFV NOM frog-3SG.GEN DM
  come.to here DM
  <RED>bark=PFV NOM dog-3SG.GEN ??
  AF-happy=PFV NOM  child-3SG.GEN NOM  child LNK that say-3SG.GEN
  INT   frog-1SG.GEN  EXIST=PFV find-LF-1IPLGEN  say-3SG.GEN
  AF-happy=PFV NOM child LNK that say-3SG.GEN
  here  DM  that’s dog LNK this DM <RED>bark say-3SG.GEN
  where=PFV I.wonder frog-3SG.GEN  NEG=PFV NOM frog-3SG.GEN
  bark NOM dog LNK that say-3SG.GEN
  leave=PFV LOC-paddy.field-LOC maybe  AF-swim NOM frog LNK that DM
  AF-sad=PFV NOM  child LNK that say-3SG.GEN
  INT  where=PFV NOM frog=1IPL.GEN  why NEG=PFV PART
  AF-run=PFV  say GEN child LNK that  say-3SG.GEN DM
  EXIST here DM  hold-LF-3SG.GEN=PFV NOM dog-3SG.GEN  nag OBL dog-3SG.GEN  hold say-3SG.GEN
  INT NEG=PFV NOM frog-3SG.GEN  say-3SG.GEN
  that’s FS  here=PFV DM
  EXIST=PFV NOM  child LNK that <AF>RED-yell
  yell-LF-3SG.GEN GEN  NEG   say-3SG.GEN
  EXIST dog-3SG.GEN  AF-bark
  NEG say-3SG.GEN  DM
  INT  how-NAF-1IPL.GEN  NEG=PFV NOM frog-1IPL.GEN  say-3SG.GEN DM
  come.to here DM
  LOC-RED-tree-LOC DM
  EXIST=PFV say-3SG.GEN PART  EXIST NOM  beehive GEN bee  say-3SG.GEN
  bee LOC-top GEN tree  say-3SG.GEN DM
  EXIST=PFV NOM dog-3SG.GEN AF-<RED>bark say-3SG.GEN  OBL  bee LNK that say-3SG.GEN
  DM  that’s child LNK that DM  INT  fear=1IPL.NOM  bite-LF-3PL.GEN maybe DM
  <AF>crouch=PFV child LNK that  say-3SG.GEN
  X  NOM person-3SG.GEN bee LNK that  say-3SG.GEN  here DM  want-LF-3SG.GEN climb  GEN dog that  bee LNK that DM
  EXIST=PFV NOM frog LNK that  find-LF-3SG.GEN maybe DM  EXIST  AF-happy=PFV say-3SG.GEN  NOM person NOM child LNK that
  find-LF-3SG.GEN=PFV NOM frog-3SG.GEN DM
  that’s bee LNK that  AF-exit.one.by.one=PFV person-3SG.GEN DM
  <RED>bark-LF-3SG.GEN dog-3SG.GEN GEN  AF-cry=PFV  say-3SG.GEN NOM person-3SG.GEN
  AF.fear QA-bite-LF  GEN bee maybe
  DM  come.to here DM
  EXIST=PFV NOM frog LNK that  swim LOC-  paddy.field-LOC  say-3SG.GEN this.way
  DM  that’s dog LNK this DM  chase-LF-3PL.GEN=PFV GEN  bee maybe DM
  AF.fear=PFV NOM dog LNK that  want climb  want climb OBL tree-3SG.GEN
  unable  DM
  that’s child LNK this DM  EXIST=PFV LOC-RED-tree  leave=PFV AF-climb  LOC-tree-LOC-3SG.GEN child-3SG.GEN  EXIST child LNK that say-3SG.GEN
  AF.fear OBL bee
  come.to here DM
  <AF>see=PFV OBL  bird NOM child LNK that say-3SG.GEN DM
  EXIST=still bee LNK this  X  fly say-3SG.GEN <AF>chase OBL dog-3SG.GEN
  DM INT  how=PFV EXIST NOM bird
  EXIST NOM bee GEN  say-3SG.GEN GEN child  fall-LF=PFV say-3SG.GEN <PFV>fear-NMZ
  AF.separate=PFV LOC  dog-3SG.GEN say-3SG.GEN
  EXIST NOM dog-3SG.GEN AF-<RED>bark
  run AF.fear OBL bee  say-3SG.GEN
  DM  that’s this DM  INT  how=PFV  EXIST NOM bird
  afraid=1SG.NOM X  bite-LF-3SG.GEN afraid=1SG.NOM  sting-LF-3SG.GEN bird  say-3SG.GEN maybe DM  AF.fear NOM child LNK this say-3SG.GEN
  here  DM  where=PFV I.wonder dog-3SG.GEN
  come.to here DM
  then  <AF>yell=PFV say-3SG.GEN NOM child LNK that  FS  <AF>yell LOC dog-3SG.GEN maybe
  INT  dog-3SG.GEN AF.sleep say-3SG.GEN
  DM  RED-yell-LF-3SG.GEN dog-3SG.GEN GEN  NEG EXIST frog see-LF-3SG.GEN LOC-AF-far-LOC  NOM frog LNK that say-3SG.GEN
  <AF>yell LOC dog-3SG.GEN  <AF>yell LOC frog LNK that maybe  LOC frog-3SG.GEN  NOM child LNK this  PART  DM
  come.to here DM
  EXIST=PFV NOM child LNK that  look.down  <AF>see
  ??  EXIST NOM dog-1IPL.GEN PART
  NEG NEG NOM dog-1IPL.GEN  NEG AF-run  NOM dog-1IPL.GEN
  NEG bite-LF GEN bee
  NEG dog-3SG.GEN  NEG INT here OBL dog
  EXIST NOM dog-1IPL.GEN NEG  bite-LF GEN bee  think GEN child LNK that say-3SG.GEN
  come.to here DM  EXIST=PFV NOM deer say-3SG.GEN
  AF.together OBL dog-3SG.GEN  NOM deer LNK that
  that’s deer LNK that DM
  good maybe DM  mount-LF-3SG.GEN=PFV GEN  GEN 
  child LNK that carry.on.the.back-LF-3SG.GEN=PFV GEN  deer NOM child LNK that say-3SG.GEN
  here  AF.fear OBL  bee maybe
  DM  this DM  INT  bee LNK this  how I.wonder  <PFV>mount-NMZ-3SG.GEN child LNK that OBL  cattle DM  XX
  deer LNK that  fall-LF=PFV child LNK that  QENA-happy-NMZ
  EXIST NOM dog-3SG.GEN  also 3SG.GEN  here
  X  that.way NOM thing-3SG.GEN  GEN frog LNK this OBL person-3SG.GEN
  DM  here=PFV DM
  EXIST=PFV here DM
  EXIST=PFV NOM person-3SG.GEN
  AF-RED-happy=PFV maybe DM
  fall-LF=PFV person  OBL what I.wonder not.know-LF-1SG.GEN
  person-3SG.GEN=REL person  exactly EXIST hand-3SG.GEN  DM
  AF-happy=PFV maybe
  EXIST deer LNK that  look.down 3SG.NOM say-3SG.GEN
  here
  come.to here DM
  INT AF-happy=PFV
  EXIST=PFV NOM  NOM dog-3SG.GEN DM
  FS  mount-LF-3SG.GEN=PFV GEN  dog LNK that
  place.on.the.nape-LF-3SG.GEN=PFV LOC-  head-LOC-3SG.GEN  say-3SG.GEN NOM dog LNK that
  QENA-happy-NMZ say-3SG.GEN
  frog LNK that DM  leave  <AF>play maybe
  LOC-paddy.field-LOC  LOC-RED-water-LOC
  this DM  then  NEG=2SG.NOM bark
  quiet-AF.IMP
  say GEN FS  child LNK that say-3SG.GEN  NOM dog-3SG.GEN
  NEG AF-<RED>bark  quiet-AF.IMP  say-3SG.GEN 
  EXIST=PFV here DM
  EXIST what I.wonder PART  RED-look.around-LF GEN dog-3SG.GEN
  what I.wonder want-LF GEN dog-3SG.GEN  say-3SG.GEN  dog GEN child LNK that
  EXIST here DM
  EXIST=PFV  FS <AF>see LOC dog-3SG.GEN say-3SG.GEN
  EXIST=PFV NOM frog  CLF.NHUM-two=PFV NOM frog LNK that say-3SG.GEN
  <AF>yell  OBL other-3SG.GEN  maybe NOM frog LNK that DM
  originally-one DM  CLF.NHUM-two=PFV NOM frog LNK that DM
  EXIST=PFV <AF>see NOM child LNK that  3SG.NOM LOC dog-3SG.GEN
  QENA-happy-NMZ  <AF>see LOC frog-3SG.GEN  LOC CLF.NHUM-two=PFV
  this DM  child LNK that DM  EXIST=PFV and dog-3SG.GEN also  RED-happy=PFV maybe  <AF>see LOC FS  LOC frog-3PL.GEN DM
  leave=PFV many.NHUM say-3SG.GEN frog-3SG.GEN
  many.NHUM=PFV NOM frog-3SG.GEN DM AF-happy=PFV NOM  child LNK that  <AF>see LOC  frog LNK that  say-3SG.GEN
  can <AF>yell INT
  EXIST originally-one NOM frog LNK that DM
  instead=PFV many.HUM NOM frog LNK that say-3SG.GEN
  this DM  then  AF-happy=PFV=1SG.NOM  good=PFV heart-1SG.GEN
  say-3SG.GEN maybe here  toward-top  OBL hand child LNK that say-3SG.GEN
  EXIST=PFV NOM many.HUM NOM frog-3SG.GEN
  EXIST NOM dog-3SG.GEN
  NEG how
  FIL EXIST stand.still-LF GEN frog-3SG.GEN  many.NHUM=PFV frog-3SG.GEN DM
  AF-happy=PFV DM
  toward-top=PFV  OBL hand child LNK this say-3SG.GEN
  X  that.way
  that.way only
