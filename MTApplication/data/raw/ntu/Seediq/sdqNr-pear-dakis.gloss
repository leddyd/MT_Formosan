  FIL  be.at-LF one FIL  elderly PART
  what PFV.PART  AF-mature at.that.time  fruit GEN tree
  probably know-LF=3SG.GEN  guava also FIL be.like a.little  be.like a.little guava see-LF  FIL know-LF be.like.this FIL  pear also NEG know-PF.IRR
  then tree=3SG.GEN  AF.big PART
  AF.climb.ladder AF-go <AF>pick NOM elderly this
  FIL elderly this PART  AF-carry FIL basket put-LF=3SG.GEN fruit tree
  then AF-carry ladder
  then  AF.big NOM  AF.big NOM  FIL  tree that mother=3SG.GEN tree PART
  NEG FS FIL tree=3SG.GEN PART  AF-fruit PART  NEG arrive-PF.IRR AF-take hand above AF-go <AF>pick    
  then  <AF>pick <AF>pick NOM who PFV.PART  elderly this
  then FS  NEG long two  two basket NOM <PFV><AF>pick GEN fruit tree at.that.time
  then AF-pass there NOM one=3SG.GEN  boy elderly a.little
  then  <AF>pull FIL  sheep PART
  maybe AF.go <AF>feed sheep-3SG.GEN PART 
  then  AUX.PST  <AF>pull <AF>pull then AF-pass FS  AF-pass under FIL grandfather PROG <AF>pick fruit tree this
  thus AUX.PST AF-pass road FS AUX.PST  <AF>over then AUX.PST AF-pass road=3SG.GEN thus RED-go-PF=3SG.GEN  then <AF>take.care sheep  FIL RED-go-PF=3SG.GEN <AF>take.care sheep go-PF=3SG.GEN <AF>feed sheep PART
  then  NEG long  be.at-LF one child
  FIL FS  AF.ride bicycle PART bicycle PART bike PART
 bike AF.say speech PN then
  AF.ride bicycle child  FS child this then  AF.come  FIL AF-pass under where PFV.PART
  FIL AF-pass FS FS AF-go  see-LF=3SG.GEN PROG <AF>pick  fruit tree NOM  FS one  elderly that then  FS AF-go FIL see-LF=3SG.GEN maybe AF.say <AF>pick fruit tree then PROG  EXIST above NOM elderly that
  then <PF.PFV>pick=3SG.GEN maybe PROG=3SG.GEN put-PF ground PFV.PART
  then ground  FIL PROG=3SG.GEN put-LF basket inside PART AF-be.at ground FS ground PART
  that KA at.that.time PART  go.PST child this
  see-LF=3SG.GEN NOM elderly that <AF>pick above there then
  then thus FS AF.say NOM NEG  because PROG  what PFV.PART  NEG know day <AF>pick at.that.time NOM elderly this PART then FS
  maybe AF.say NEG=1SG.NOM self  NEG=3SG.GEN see-PF.IRR NOM child this at.that.time PART
  AUX.PST <AF>stealthily AF-take one what PFV.PART  one basket=3SG.GEN  fruit tree that
  be.like a.little FIL guava see-LF PART
  then  thus put-LF=3SG.GEN front=3SG.GEN what PFV.PART  bike=3SG.GEN then
  FS  <AF>see people that  FS <AF>see <AF>see elderly PFV.PART then
  maybe AF.say NOM FS NEG NEG AF.how NEG see then
 AUX.PST=3SG.GEN AF.steal AF-carry  stealthy-PF=3SG.GEN AF-carry at.that.time then
  AUX.PST FS FS  FS AUX.PST  AUX.PST what PFV.PART AF.go know-LF AF.go house this PART child
  FS stealthy-LF=3SG.GEN AF-carry maybe=3SG.GEN  FIL maybe=3SG.GEN carry-PF where NEG know-PF.IRR maybe=3SG.GEN sell-PF maybe=3SG.GEN NEG know-PF.IRR
  AUX.PST AF-pass road at.that.time  FS AF-pass road at.that.time NEG arrive house still PART AF.encounter one child woman
  child woman also  ?? AF.ride bike also
  AF.ride bike at.that.time child this child woman this PART
  FIL FIL  because KA man 3SG PART maybe AF.say see-LF PART child woman this  maybe AF-beautiful see-LF  AF.what AF.say AF.what AF.say FS looks=3SG.GEN woman this then
  FS although <AF>see FS child woman this NOM NOM child FIL child man this then
 thus  NEG=3SG.GEN know-PF.IRR be.at-LF stone NOM road then  AF.bump stone NOM what PFV.PART  bike=3SG.GEN PFV.PART then  AF.stumble NOM child this
  AF.stumble at.that.time PART AF.scatter NOM  what PFV.PART FS FIL  fruit tree <PF.PFV>pick=3SG.GEN
  then  hat=3SG.GEN also PART  AUX.PST  AUX.PST pass-LF <AF>touch.off GEN child woman then AF.leap.away be.like.this AF.far a.little
  go.PST AF.over FIL  go.PST AF-far  FIL hat=3SG.GEN CONJ what PFV.PART  hat wear-LF=3SG.GEN PART  far a.little FS TNG-pass-LF=3SG.GEN PART that then thus
  FS fruit tree FS FIL <PFV>stealthy-LF=3SG.GEN AF-bring one basket PART AF.leap.away far AF.toward another NOM that
  then thus  AF.stumble child this then AF-take little hurt
 then thus <AF>see hurt=3SG.GEN Q PROG AF.bleed PART
  then AF.come NOM three FS three child again
  maybe self about same.age a.little  Q AF.go AF.play where PART NEG know-PF.IRR
  thus  three FS three child FS FIL three child FIL
  child FS FIL man this FIL <AF>see PART  AF.stumble NOM who PFV.PART  FIL  FS AF.steal AF-take FIL fruit tree child FIL FIL  child <PFV>AF-take fruit tree this at.that.time then
  then AF.say AF.compassionate FS maybe AF.say AF.compassionate self then thus help-PF=3SG.GEN what PFV.PART <AF>pick NOM fruit tree then put-LF=3SG.GEN FS  CAU-go-LF=3SG.GEN basket then thus stand.up-PF=3SG.GEN child this then
  put-LF=3SG.GEN under  bike=3SG.GEN NOM basket=3SG.GEN again then
  then just.like be.like.this <AF>help AF.say FIL FIL
  what PFV.PART  AF.compassionate self FIL  FIL child maybe=3SGGEN <PFV>to.be.able-PF what <AF>how PART hurt FS AF-take hurt AF.pig PART NEG  NEG AF.go house
  then thus  AF-finish <AF>help at.that.time PART then  bring-PF=3SG.GEN PFV.PART
  then thus go.PST RED-child  go.PST self three this AF.go AF.play.around child three this NEG FS
  NEG same go-PF=3PL.GEN go.PST AF.go house NOM child AF.small this  FIL child  <AF>steal AF-take this
  then  NEG FS NEG ride
  FS then  maybe because AF-get hurt child this then  NEG  maybe although NEG forceful what PFV.PART maybe=3SG.GEN NEG possible-LF.IRR pedal bike=3SG.GEN PFV.PART then
 AF.walk then pull-PF=3SG.GEN NOM bike=3SG.GEN this then  all  FS <PF.PFV>steal=3SG.GEN AF-bring one basket what PFV.PART  fruit tree this PART then thus
  FS  AF.walk a.little then  <AF>see back
  then FS FS FIL FIL <AF>see three child child AUX.PST <PFV>help 3SG PFV.PART
  then three FIL child 3PL 3SG this PART be.at-LF that one
  AF.walk then see-LF=3SG.GEN then this NOM FS whose NOM hat this again AF.say take-PF=3SG.GEN hat that then maybe FS maybe AF-know AF.say GEN child PROG <AF>see NOM child NOM  AF<PFV>stumble that also then
  that  FS what PFV.PART  FIL  REC-see then at.that.time  then thus NEG  then AF.say FS maybe AF.say NA 3SG NOM  hat this then thus send-PF=3SG.GEN
  send-PF=3SG.GEN  send-PF=3SG.GEN  child this NOM hat this at.that.time PART  thus child AF<PFV>stumble <AF>steal AF-take fruit tree PART  take-PF=3SG.GEN NOM three fruit tree PFV.PART then  give-PF=3SG.GEN  young.man <PF.PFV>help=3SG.GEN 3PL
  thus go.PST PFV.PART
  FS then thus boy  three this NOM PN-one  three <PF.PFV>give=3SG.GEN  three <PF.PFV>give=3SG.GEN <PF.PFV>help=3SG.GEN thus  FS child AF<PFV>stumble this 3PL three this  FS three FS FIL  fruit tree <PF.PFV>give=3SG.GEN
 then AUX.PST PN-one AF-eat  this  FS AF-eat AF-eat PFV.PART
 FS 3PL three this then AF-pass thus  FIL  PROG=3SG.GEN what PFV.PART  thus elderly PROG <AF>pick FIL fruit tree that
 FS AF.same.as.before self AF-pass there road=3SG.GEN again then
  <AF>see NOM elderly this AF.say
  INT FS  FIL FS FIL  FS AF-go <AF>pick above RED-just.a.while.ago first AUX.PST=3SG.GEN steal-LF=3SG.GEN child this at.that.time PART
 then thus elderly at.that.time PART thus AF-come FIL  AF.get.down ground then AF-come AF-see what PFV.PART <PF.PFV>pick=3SG.GEN fruit tree
  FS  <PF.PFV>think PART FS  be.like a.little two  FIL basket FIL  FS <PFV>pick=1SG.GEN just.a.while.ago AF-why NOM FS AF-remain one real be.like a.little AF.say PART
  be.like a.little FS  NEG=3SG.GEN know-PF.IRR <AF>think
 INT AF.say go.PST where one NOM AF.say <AF>think PART PART
  AF.come NOM 3PL three this AF.walk AF-pass there then AF-eat AF-eat fruit tree thus mouth=3SG.GEN then thus
  then then <AF>think  grandfather this AF.say maybe  maybe PART then AF-how AF.say <AF>think also NEG=1SG.GEN know-PF.IRR
  then NEG=3SG.GEN say-PF.IRR Q=2PL.GEN NEG <PFV>steal-LF also then
 NEG=3SG.GEN say-PF.IRR  FIL  NEG=3SG.GEN ask-PF.IRR NOM boy this then AUX.PST self AF.play NOM three boy this
